---
title: Introducción a JavaScript
layout: layout-slides
---

%section
  %h1 Introducción a JavaScript

%section
  %h2 JavaScript es un<br>lenguaje de programación
  %p.note
    Programamos comportamientos: ˝cuando se hace click aquí, ocurre&nbsp;algo˝.
%section
  %h2 Objetivos
  %ul.note
    %li Acceder al contenido de una web
    %li Modificar el contenido de una web
    %li Programar reglas
    %li Reaccionar a eventos
%section
  %h2 Ejemplo
  %p.note
    ˝Si yo hago click…˝
  %p.note
    ˝en un elemento que tenga la clase 'elemento'…˝
  %p.note
    ˝…quita o ponle la clase 'activo' ˝

%section
  .codepen(data-height="500" data-editable="true" data-theme-id="0" data-slug-hash="JLRqbJ" data-default-tab="js,result" data-user="htmlboy" data-embed-version="2")

%section
  %h2 Usar JS: Lo básico

%section
  %h3 La etiqueta script
  %p.note Podemos añadir un archivo JavaScript a una página web usando la etiqueta <code>script</code> antes del cierre del body:
  %pre
    %code
      :preserve
          &lt;script src="ruta/del/archivo.js"&gt;&lt;/script&gt;
        &lt;/body&gt;

%section
  %h3 Orden de ejecución
  %p.note
    Los archivos JS se ejecutan en orden de aparición, por lo que deberíamos
    cargar las librerías externas (como <a href="https://jquery.com" target="_blank">jQuery</a>)
    antes de cargar los archivos JS dependientes.

%section
  %h3 La consola
  %p.note
    La consola se puede encontrar en la pestaña de consola del inspector del navegador.
    Nos permite encontrar problemas en nuestro código. Se puede usar con el método
    <code>console.log()</code> para escribir mensajes y valores.

%section
  .codepen(data-height="500" data-editable="true" data-theme-id="0" data-slug-hash="YzzMYNe" data-default-tab="js,result" data-user="htmlboy" data-embed-version="2")

%section
  %h2 Usar JS: sintaxis

%section
  %h3 Escritura
  %p.note
    JavaScript es sensible a las mayúsculas y minúsculas, igual que en&nbsp;CSS.

  %p.note
    Los guiones no se utilizan para los nombres de variables, porque se pueden
    confundir con el símbolo de sustracción. En lugar de eso, se usa muchas veces
    la escritura camelCase (cada palabra a partir de la primera empieza en mayúscula).
    Ejemplo: <code>nombreVariable</code>.

%section
  %h3 Comillas
  %p.note
    JS usa las comillas para encapsular valores que no deben ser procesados directamente
    (normalmente valores textuales). Se pueden usar comillas dobles ("") o simples (''),
    pero deberían usarse alternativamente cuando se anidan.
    Ejemplo:
  %pre
    %code
      :preserve
        "este es un 'texto entrecomillado'"

%section
  %h3 Paréntesis
  %p.note
    Las funciones JS tienen normalmente uno o más argumentos (valores interpretados)
    entre paréntesis. El nombre de la función se escribe junto al paréntesis, sin
    espacios. Podemos pasar varios argumentos separados por comas.
    Ejemplo:
  %pre
    %code
      :preserve
        console.log("Hola");

%section
  %h3 Puntos
  %p.note
    El punto indica pertenencia, normalmente a un objeto. Por ejemplo, <code>console.log()</code>
    llama a la función <code>log()</code>, que pertenece al objeto <code>console</code>.

%section
  %h3 Punto y coma, llaves
  %p.note
    Igual que en CSS, las instrucciones en JS suelen terminar con un <code>;</code> que
    indica que la siguiente línea es una instrucción diferente. Y de la misma forma,
    podemos agrupar varias instrucciones dentro de llaves <code>{}</code> para
    vincularlas a otros elementos, como las funciones.

%section
  %h3 Comentarios en JS
  %p.note
    Los comentarios de bloque se escriben con <code>/* */</code>, ejemplo:

  %pre
    %code
      :preserve
        /* texto dentro de un comentario */
  %p.note
    Los comentarios de línea se escriben con <code>//</code> al principio de la
    línea,&nbsp;ejemplo:
  %pre
    %code
      :preserve
        // Línea comentada

%section
  %img.clean(src="js-intro-content/logo-jquery.png" alt="jQuery")
  %p.note
    jQuery es una librería JavaScript con un montón de funciones útiles prefabricadas
    para acelerar la escritura de scripts.
  %p.note
    Se suele ver habitualmente en <i>plugins</i> como galerías o cajas modales.
%section
  %p.note
    Si usamos jQuery, deberíamos descargarlo de
    <a href="http://jquery.com" target="_blank">jQuery.com</a> y referenciarlo antes
    que nuestro propio archivo JS.
  %pre
    %code
      :preserve
          &lt;script src="jquery.js"&gt;&lt;/script&gt;
          &lt;script src="mis-scripts.js"&gt;&lt;/script&gt;
        &lt;/body&gt;
%section
  %p.note Ejemplo de un script con jQuery:
  .codepen(data-height="500" data-editable="true" data-theme-id="0" data-slug-hash="WzoGGz" data-default-tab="js,result" data-user="htmlboy" data-embed-version="2")
